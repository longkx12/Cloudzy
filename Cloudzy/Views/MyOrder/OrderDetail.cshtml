@model Cloudzy.Models.ViewModels.MyOrder.DetailViewModel
@{
    ViewData["Title"] = "Chi tiết đơn hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<main>
    <div class="container">
        <div class="row">
            <!-- Main Content -->
            <div class="col-md-9">
                <div class="card border-0 shadow-sm p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h4 class="mb-0">Chi tiết đơn hàng #@Model.Order.OrderId</h4>
                        <span class="@GetStatusClass(Model.Order.Status) fw-medium">@GetStatusText(Model.Order.Status)</span>
                    </div>

                    <div class="mb-4 text-muted">
                        <i class="far fa-calendar-alt me-1"></i> Ngày đặt hàng: @Model.Order.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6 mb-3 mb-md-0">
                            <div class="card bg-light border-0 p-3">
                                <h6 class="mb-2"><i class="fas fa-map-marker-alt me-2"></i>Địa chỉ giao hàng</h6>
                                <p class="mb-0">@Model.Order.Address</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card bg-light border-0 p-3">
                                <h6 class="mb-2"><i class="fas fa-credit-card me-2"></i>Phương thức thanh toán</h6>
                                <p class="mb-0">@GetPaymentMethodText(Model.Order.PaymentMethod)</p>
                            </div>
                        </div>
                    </div>

                    <h5 class="mb-3"><i class="fas fa-box me-2"></i>Sản phẩm</h5>
                    <div class="table-responsive mb-4">
                        <table class="table table-striped">
                            <thead class="table-dark">
                                <tr>
                                    <th width="60">Ảnh</th>
                                    <th>Sản phẩm</th>
                                    <th>Đơn giá</th>
                                    <th>Số lượng</th>
                                    <th class="text-end">Thành tiền</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Order.Items)
                                {
                                    <tr>
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.ImageUrl))
                                            {
                                                <img src="@item.ImageUrl" alt="@item.ProductName" class="img-fluid rounded" style="width: 50px; height: 50px; object-fit: cover;">
                                            }
                                            else
                                            {
                                                <img src="~/images/placeholder-product.png" alt="Product" class="img-fluid rounded" style="width: 50px; height: 50px; object-fit: cover;">
                                            }
                                        </td>
                                        <td>
                                            <div class="fw-medium">@item.ProductName</div>
                                            <div class="text-muted small">Phân loại: @item.Size</div>
                                        </td>
                                        <td>@item.Price.ToString("N0") đ</td>
                                        <td>@item.Quantity</td>
                                        <td class="text-end fw-medium">@((item.Price * item.Quantity).ToString("N0")) đ</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="card bg-light border-0 p-3 mb-4">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Tổng tiền hàng:</span>
                            <span>@GetSubtotal(Model.Order.Items).ToString("N0") đ</span>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.Order.DiscountCode))
                        {
                            <div class="d-flex justify-content-between mb-2">
                                <span>Giảm giá (Mã: @Model.Order.DiscountCode):</span>
                                <span>- @GetDiscountAmount(Model.Order.TotalPrice, GetSubtotal(Model.Order.Items)).ToString("N0") đ</span>
                            </div>
                        }
                        <div class="d-flex justify-content-between pt-2 border-top mt-2">
                            <span class="fw-bold">Tổng thanh toán:</span>
                            <span class="fw-bold text-danger fs-5">@Model.Order.TotalPrice.ToString("N0") đ</span>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a asp-action="MyOrders" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-2"></i> Quay lại
                        </a>
                        @if (Model.Order.Status.ToLower() == "pending")
                        {
                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#cancelOrderModal">
                                <i class="fas fa-times-circle me-2"></i> Hủy đơn hàng
                            </button>
                        }
                        @if (Model.Order.Status.ToLower() == "shipping")
                        {
                            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#markDeliveredModal">
                                <i class="fas fa-check-circle me-2"></i> Đã nhận được hàng
                            </button>
                        }
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="col-md-3 mb-4">
                <div class="card sidebar-card border-0 shadow-sm p-4">
                    <h5 class="mb-4 fw-bold">Danh mục quản lý</h5>
                    <ul class="list-unstyled mb-0">
                        <li class="sidebar-menu-item">
                            <a asp-controller="UserProfile" asp-action="Profile" class="text-decoration-none">
                                <i class="fas fa-user me-2"></i>
                                Tài khoản của tôi
                            </a>
                        </li>
                        <li class="sidebar-menu-item">
                            <a asp-controller="UserProfile" asp-action="ChangePassword" class="text-decoration-none">
                                <i class="fas fa-key me-2"></i>
                                Đổi mật khẩu
                            </a>
                        </li>
                        <li class="sidebar-menu-item active">
                            <a asp-controller="Order" asp-action="MyOrders" class="text-decoration-none">
                                <i class="fas fa-shopping-bag me-2"></i>
                                Đơn mua
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</main>

@if (Model.Order.Status.ToLower() == "pending")
{
    <div class="modal fade" id="cancelOrderModal" tabindex="-1" aria-labelledby="cancelOrderModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cancelOrderModalLabel">Xác nhận hủy đơn hàng</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Bạn có chắc chắn muốn hủy đơn hàng #@Model.Order.OrderId?</p>
                    <p class="text-muted small">Lưu ý: Hành động này không thể hoàn tác.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <form asp-action="CancelOrder" asp-route-id="@Model.Order.OrderId" method="post">
                        <button type="submit" class="btn btn-danger">Hủy đơn hàng</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@if (Model.Order.Status.ToLower() == "shipping")
{
    <div class="modal fade" id="markDeliveredModal" tabindex="-1" aria-labelledby="markDeliveredModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="markDeliveredModalLabel">Xác nhận đã nhận hàng</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Bạn xác nhận đã nhận được đơn hàng #@Model.Order.OrderId?</p>
                    <p class="text-muted small">Lưu ý: Hành động này sẽ đánh dấu đơn hàng đã được giao thành công.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <form asp-action="MarkAsDelivered" asp-route-id="@Model.Order.OrderId" method="post">
                        <button type="submit" class="btn btn-success">Xác nhận đã nhận hàng</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            if ('@TempData["SuccessMessage"]' != '') {
                toastr.success('@TempData["SuccessMessage"]');
            }
            if ('@TempData["ErrorMessage"]' != '') {
                toastr.error('@TempData["ErrorMessage"]');
            }
        });
    </script>
}

@functions {
    string GetStatusClass(string status)
    {
        return status.ToLower() switch
        {
            "pending" => "badge bg-warning",
            "processing" => "badge bg-info",
            "shipping" => "badge bg-warning",
            "delivered" => "badge bg-success",
            "cancelled" => "badge bg-danger",
            _ => "badge bg-secondary"
        };
    }

    string GetStatusText(string status)
    {
        return status.ToLower() switch
        {
            "pending" => "Chờ xác nhận",
            "processing" => "Đang xử lý",
            "shipping" => "Đang giao hàng",
            "delivered" => "Đã giao hàng",
            "cancelled" => "Đã hủy",
            _ => status
        };
    }

    string GetPaymentMethodText(string paymentMethod)
    {
        return paymentMethod.ToLower() switch
        {
            "cod" => "Thanh toán khi nhận hàng (COD)",
            "momo" => "Ví điện tử MoMo",
            "vnpay" => "VNPay",
            "banking" => "Chuyển khoản ngân hàng",
            _ => paymentMethod
        };
    }

    decimal GetSubtotal(List<Cloudzy.Models.ViewModels.MyOrder.ItemViewModel> items)
    {
        return items.Sum(i => i.Price * i.Quantity);
    }

    decimal GetDiscountAmount(decimal totalPrice, decimal subtotalWithShipping)
    {
        return subtotalWithShipping - totalPrice;
    }
}