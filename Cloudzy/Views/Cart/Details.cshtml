@model Cloudzy.Models.ViewModels.CartDetails.CartDetailsViewModel
@{
    ViewData["Title"] = "Giỏ hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-5">
    <!-- Shopping Cart Table -->
    <div class="cart-section">
        @if (Model.CartItems.Any())
        {
            <div class="table-responsive">
                <table class="table cart-table">
                    <thead>
                        <tr class="border-bottom">
                            <th class="text-start">Sản phẩm</th>
                            <th class="text-center">Giá</th>
                            <th class="text-center">Số lượng</th>
                            <th class="text-center">Tổng tiền</th>
                            <th class="text-center">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="cartItemsContainer">
                        @foreach (var item in Model.CartItems)
                        {
                            <tr class="border-bottom cart-item-row" data-id="@item.CartItemId">
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="product-info">
                                            <p class="product-name mb-0">@item.ProductName - @item.SizeName</p>
                                        </div>
                                    </div>
                                </td>
                                <td class="text-center align-middle price-cell">@item.Price?.ToString("N0") VND</td>
                                <td class="text-center align-middle">
                                    <div class="d-flex justify-content-center" style="height: 100%;">
                                        <input type="number" class="form-control text-center quantity-input"
                                               value="@item.Quantity" min="1" max="@item.Stock"
                                               data-id="@item.CartItemId" data-stock="@item.Stock">
                                    </div>
                                </td>
                                <td class="text-center align-middle item-total">@item.TotalPrice?.ToString("N0") VND</td>
                                <td class="text-center align-middle">
                                    <button class="btn btn-sm btn-link text-danger remove-item" data-id="@item.CartItemId">Xóa</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Checkout Section -->
            <div class="row mt-5">
                <!-- Voucher and Checkout -->
                <div class="col-md-12">
                    <div class="checkout-section float-end" style="max-width: 600px;">
                        <!-- Voucher Section -->
                        <div class="voucher-section d-flex align-items-center justify-content-end mb-3 pb-3 border-bottom">
                            <span class="me-2">
                                <i class="fas fa-ticket-alt @(string.IsNullOrEmpty(Model.VoucherCode) ? "text-danger" : "text-success")"></i> Voucher
                            </span>
                            <button class="btn btn-link text-primary p-0" id="openVoucherModal">
                                @if (!string.IsNullOrEmpty(Model.VoucherCode))
                                {
                                    <span class="voucher-applied">@Model.VoucherCode</span>
                                }
                                else
                                {
                                    <text>Chọn hoặc nhập mã</text>
                                }
                            </button>
                        </div>

                        <!-- Total Section -->
                        <div class="total-section d-flex flex-column align-items-end">
                            <div class="d-flex justify-content-between w-100 mb-2">
                                <span>Tạm tính:</span>
                                <span id="subtotal">@Model.SubTotal.ToString("N0")đ</span>
                            </div>
                            @if (Model.VoucherDiscount > 0)
                            {
                                <div class="d-flex justify-content-between w-100 mb-2">
                                    <span>Giảm giá:</span>
                                    <span id="discount">-@Model.VoucherDiscount.ToString("N0")đ</span>
                                </div>
                            }
                            <div class="d-flex justify-content-between w-100 mb-3">
                                <h5 class="mb-0">Tổng thanh toán:</h5>
                                <h5 class="mb-0" id="total">@Model.Total.ToString("N0")đ</h5>
                            </div>
                            <button class="btn btn-success px-4 py-2 text-uppercase" id="checkout-btn">Đi đến thanh toán</button>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-shopping-cart fa-5x text-muted mb-3"></i>
                <h3>Giỏ hàng của bạn đang trống</h3>
                <p class="text-muted">Hãy thêm sản phẩm vào giỏ hàng để tiếp tục mua sắm</p>
                <a href="/" class="btn btn-primary mt-3">Tiếp tục mua sắm</a>
            </div>
        }
    </div>
</div>

<!-- Voucher Modal -->
<div class="modal fade" id="voucherModal" tabindex="-1" aria-labelledby="voucherModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="voucherModalLabel">Chọn Voucher</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="input-group mb-3">
                    <input type="text" class="form-control" placeholder="Nhập mã voucher" id="voucher-code">
                    <button class="btn btn-outline-primary" type="button" id="apply-voucher">Áp dụng</button>
                </div>
                <div class="available-vouchers">
                    <h6>Voucher có sẵn</h6>
                    <div class="list-group">
                        <!-- Available vouchers will be loaded here -->
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<!-- Hidden form fields to store current voucher state -->
<input type="hidden" id="current-voucher-code" value="@Model.VoucherCode" />
<input type="hidden" id="current-voucher-type" value="@Model.VoucherTypeId" />
<input type="hidden" id="current-voucher-discount" value="@Model.VoucherDiscount" />

@section Scripts {
    <script>
        $(document).ready(function () {
            // Biến để theo dõi trạng thái hiện tại
            let currentVoucherCode = $("#current-voucher-code").val();
            let currentVoucherDiscount = parseFloat($("#current-voucher-discount").val()) || 0;
            let currentVoucherType = parseInt($("#current-voucher-type").val()) || null;
            let subtotal = parseFloat($("#subtotal").text().replace(/[^\d]/g, ''));

            // Cập nhật tổng tiền khi trang load
            updateTotals();

            // Model voucher
            $("#openVoucherModal").click(function() {
                loadAvailableVouchers();
                $("#voucherModal").modal("show");
            });

            // Tải voucher từ máy chủ
            function loadAvailableVouchers() {
                $.ajax({
                    url: '/Cart/GetAvailableVouchers',
                    type: 'GET',
                    success: function(response) {
                        if (response.success) {
                            // Xóa voucher hiện có
                            $(".available-vouchers .list-group").empty();

                            // Thêm voucher từ form
                            response.vouchers.forEach(function(voucher) {
                                let voucherItem = `
                                    <button type="button" class="list-group-item list-group-item-action voucher-item"
                                        data-code="${voucher.code}"
                                        data-value="${voucher.value}"
                                        data-min="${voucher.minimumValue}"
                                        data-max="${voucher.maximumValue}">
                                        <div class="d-flex w-100 justify-content-between">
                                            <h6 class="mb-1">${voucher.code}</h6>
                                            <small>${getVoucherValueText(voucher)}</small>
                                        </div>
                                        <p class="mb-1">${getVoucherDescription(voucher)}</p>
                                    </button>
                                `;
                                $(".available-vouchers .list-group").append(voucherItem);
                            });

                            if (response.vouchers.length === 0) {
                                $(".available-vouchers .list-group").append(
                                    '<div class="alert alert-info mb-0">Không có voucher nào khả dụng</div>'
                                );
                            }
                        } else {
                            toastr.error(response.message || 'Không thể tải voucher');
                        }
                    }
                });
            }

            function getVoucherValueText(voucher) {
                // Dựa vào value để xác định loại voucher
                let value = parseFloat(voucher.value);
                if (value > 0 && value < 1) {
                    return `Giảm ${value * 100}%`;
                } else if (value >= 1) {
                    return `Giảm ${numberWithCommas(value)}đ`;
                }
                return '';
            }

            function getVoucherDescription(voucher) {
                let desc = '';
                let value = parseFloat(voucher.value);

                if (value > 0 && value < 1) {
                    desc = `Giảm ${value * 100}% cho đơn hàng`;
                    if (voucher.maximumValue > 0) {
                        desc += `, tối đa ${numberWithCommas(voucher.maximumValue)}đ`;
                    }
                } else if (value >= 1) {
                    desc = `Giảm ${numberWithCommas(value)}đ`;
                }

                // Thêm điều kiện đơn hàng tối thiểu
                if (voucher.minimumValue > 0) {
                    desc += ` từ ${numberWithCommas(voucher.minimumValue)}đ`;
                }

                return desc;
            }

            // Xử lý thay đổi số lượng
            function updateQuantity(cartItemId, quantity) {
                console.log("Updating cartItemId:", cartItemId, "quantity:", quantity);

                $.ajax({
                    url: '/Cart/UpdateQuantity',
                    type: 'POST',
                    data: {
                        cartItemId: cartItemId,
                        quantity: quantity
                    },
                    success: function(response) {
                        if (response.success) {
                            // Cập nhật UI
                            updateItemDisplay(cartItemId, response.itemTotal);
                            subtotal = response.subTotal;
                            updateTotals();
                            toastr.success(response.message);
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function() {
                        toastr.error('Đã xảy ra lỗi khi cập nhật số lượng.');
                    }
                });
            }

            // Cập nhật hiển thị cho mục giỏ hàng
            function updateItemDisplay(cartItemId, newTotal) {
                const row = $(`.cart-item-row[data-id="${cartItemId}"]`);
                row.find('.item-total').text(numberWithCommas(newTotal) + ' VND');
            }

            // Xử lý thay đổi số lượng
            $(document).on('change', '.quantity-input', function() {
                const cartItemId = $(this).data('id');
                const quantity = $(this).val();
                const stock = $(this).data('stock');

                if (quantity > stock) {
                    toastr.warning(`Số lượng không thể vượt quá ${stock}`);
                    $(this).val(stock);
                    updateQuantity(cartItemId, stock);
                } else if (quantity < 1) {
                    toastr.warning('Số lượng tối thiểu là 1');
                    $(this).val(1);
                    updateQuantity(cartItemId, 1);
                } else {
                    updateQuantity(cartItemId, quantity);
                }
            });

            // Xử lý xóa mục giỏ hàng
            $(document).on('click', '.remove-item', function() {
                const cartItemId = $(this).data('id');

                $.ajax({
                    url: '/Cart/RemoveItem',
                    type: 'POST',
                    data: {
                        cartItemId: cartItemId
                    },
                    success: function(response) {
                        if (response.success) {
                            // Xóa mục khỏi UI
                            $(`.cart-item-row[data-id="${cartItemId}"]`).fadeOut(300, function() {
                                $(this).remove();

                                // Kiểm tra xem còn mục nào không
                                if ($('#cartItemsContainer').children().length === 0) {
                                    location.reload(); // Tải lại trang nếu không còn mục nào
                                }
                            });

                            // Cập nhật tổng số
                            subtotal = response.subTotal;
                            updateTotals();

                            // Cập nhật badge giỏ hàng nếu có
                            if ($('.cart-badge').length) {
                                $('.cart-badge').text(response.itemCount);
                            }

                            toastr.success(response.message);
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function() {
                        toastr.error('Đã xảy ra lỗi khi xóa sản phẩm.');
                    }
                });
            });

            // Xử lý áp dụng voucher bằng mã
            $('#apply-voucher').click(function() {
                const code = $('#voucher-code').val().trim();
                if (code === '') {
                    toastr.warning('Vui lòng nhập mã voucher');
                    return;
                }

                applyVoucherCode(code);
            });

            // Xử lý chọn voucher từ danh sách
            $(document).on('click', '.voucher-item', function() {
                const code = $(this).data('code');
                applyVoucherCode(code);
            });updateTotals()

            // Hàm áp dụng voucher
            function applyVoucherCode(code) {
                $.ajax({
                    url: '/Cart/CheckVoucher',
                    type: 'POST',
                    data: {
                        code: code,
                        subtotal: subtotal
                    },
                    success: function(response) {
                        if (response.success) {
                            // Lưu voucher
                            saveVoucher(code, response.voucherType, response.discountAmount);

                            // Cập nhật UI
                            $('.voucher-applied').remove();
                            $('#openVoucherModal').html(`<span class="voucher-applied">${code}</span>`);

                            // Đóng modal
                            $('#voucherModal').modal('hide');

                            // Cập nhật biến
                            currentVoucherCode = code;
                            currentVoucherDiscount = response.discountAmount;
                            currentVoucherType = response.voucherType;

                            // Cập nhật tổng
                            updateTotals();

                            toastr.success('Áp dụng voucher thành công!');
                        } else {
                            toastr.error(response.message);
                        }
                    },
                    error: function() {
                        toastr.error('Đã xảy ra lỗi khi kiểm tra voucher.');
                    }
                });
            }

            // Lưu voucher vào session
            function saveVoucher(code, voucherType, discountAmount) {
                $.ajax({
                    url: '/Cart/ApplyVoucher',
                    type: 'POST',
                    data: {
                        code: code,
                        voucherType: voucherType,
                        discountAmount: discountAmount
                    },
                    error: function() {
                        toastr.error('Lỗi khi lưu voucher');
                    }
                });
            }

            // Xử lý xóa voucher
            $(document).on('click', '.voucher-applied', function(e) {
                e.preventDefault();
                e.stopPropagation();

                $.ajax({
                    url: '/Cart/RemoveVoucher',
                    type: 'POST',
                    success: function() {
                        // Cập nhật UI
                        $('#openVoucherModal').text('Chọn hoặc nhập mã');

                        // Cập nhật biến
                        currentVoucherCode = '';
                        currentVoucherDiscount = 0;
                        currentVoucherType = null;

                        // Cập nhật tổng
                        updateTotals();

                        toastr.success('Đã xóa voucher');
                    },
                    error: function() {
                        toastr.error('Lỗi khi xóa voucher');
                    }
                });
            });

            // Cập nhật tổng tiền
            function updateTotals() {
            // Cập nhật giảm giá
                if (currentVoucherDiscount > 0) {
                    if ($('#discount').length === 0) {
                        // Thêm phần tử giảm giá ngay sau phần tử tạm tính
                        $('.total-section .d-flex:first-child').after(`
                            <div class="d-flex justify-content-between w-100 mb-2">
                                <span>Giảm giá:</span>
                                <span id="discount">-${numberWithCommas(currentVoucherDiscount)}đ</span>
                            </div>
                        `);
                    } else {
                        $('#discount').text('-' + numberWithCommas(currentVoucherDiscount) + 'đ');
                    }
                } else if ($('#discount').length > 0) {
                    $('#discount').closest('.d-flex').remove();
                }

                // Tính tổng thanh toán
                const total = subtotal - currentVoucherDiscount;
                $('#total').text(numberWithCommas(total) + 'đ');
            }

            // Hàm định dạng số có dấu phân cách
            function numberWithCommas(x) {
                return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
            }

            // Xử lý nút thanh toán
            $('#checkout-btn').click(function() {
                // Chuyển đến trang thanh toán - không cần kiểm tra voucher
                window.location.href = '/Order/Checkout';
            });
        });
    </script>
}