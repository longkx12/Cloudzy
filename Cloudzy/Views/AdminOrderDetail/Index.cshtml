@model Cloudzy.Models.ViewModels.AdminOrderDetail.DetailViewModel
@{
    ViewData["Title"] = "Chi tiết đơn hàng #" + Model.OrderId;
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid">
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Chi tiết đơn hàng #@Model.OrderId</h6>
            <a href="@Url.Action("Index", "AdminOrder")" class="btn btn-secondary">
                <i class="mdi mdi-arrow-left"></i> Quay lại
            </a>
        </div>
        <div class="card-body">
            <div class="mb-4">
                <h5 class="font-weight-bold">Danh sách sản phẩm</h5>
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th style="width: 80px;">Ảnh</th>
                                <th>Sản phẩm</th>
                                <th>Kích thước</th>
                                <th>Giá</th>
                                <th>Số lượng</th>
                                <th>Thành tiền</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrderItems)
                            {
                                <tr>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.ProductImage))
                                        {
                                            <img src="@item.ProductImage" alt="@item.ProductName" style="width: 60px; height: 60px; object-fit: cover;">
                                        }
                                        else
                                        {
                                            <img src="/img/no-image.png" alt="No Image" style="width: 60px; height: 60px; object-fit: cover;">
                                        }
                                    </td>
                                    <td>@item.ProductName</td>
                                    <td>@item.SizeName</td>
                                    <td>@item.Price.ToString("N0") đ</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.TotalPrice.ToString("N0") đ</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Thông tin đơn hàng</h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <strong>Phương thức thanh toán:</strong>
                                <span>@Model.PaymentMethod</span>
                            </div>
                            <div class="mb-3">
                                <strong>Trạng thái đơn hàng:</strong>
                                <span id="orderStatus" class="badge @(Model.Status == "Pending" ? "badge-warning" :
                                                   Model.Status == "Processing" ? "badge-info" :
                                                   Model.Status == "Shipping" ? "badge-primary" :
                                                   Model.Status == "Delivered" ? "badge-success" :
                                                   Model.Status == "Cancelled" ? "badge-danger" : "badge-secondary")">
                                    @Model.Status
                                </span>
                            </div>
                            <div class="mb-3">
                                <strong>Ngày đặt hàng:</strong>
                                <span>@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                            </div>
                            <div id="orderActions">
                                @if (Model.Status == "Pending")
                                {
                                    <button type="button" id="btnConfirmOrder" class="btn btn-success" data-order-id="@Model.OrderId" data-status="Processing">
                                        <i class="mdi mdi-check"></i> Xác nhận đơn
                                    </button>
                                }
                                else if (Model.Status == "Processing")
                                {
                                    <button type="button" id="btnConfirmShipping" class="btn btn-primary" data-order-id="@Model.OrderId" data-status="Shipping">
                                        <i class="mdi mdi-truck"></i> Xác nhận giao hàng
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Thông tin giao hàng</h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-2">
                                <strong>Tên khách hàng:</strong>
                                <span>@Model.CustomerName</span>
                            </div>
                            <div class="mb-2">
                                <strong>Số điện thoại:</strong>
                                <span>@Model.PhoneNumber</span>
                            </div>
                            <div class="mb-2">
                                <strong>Email:</strong>
                                <span>@Model.Email</span>
                            </div>
                            <div class="mb-2">
                                <strong>Địa chỉ giao hàng:</strong>
                                <span>@Model.ShippingAddress</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="mt-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Thông tin thanh toán</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Tổng tiền hàng:</span>
                            <span>@Model.Subtotal.ToString("N0") đ</span>
                        </div>
                        @if (Model.DiscountAmount > 0)
                        {
                            <div class="d-flex justify-content-between mb-2">
                                <span>Mã giảm giá (@Model.VoucherCode):</span>
                                <span>-@Model.DiscountAmount?.ToString("N0") đ</span>
                            </div>
                        }
                        <div class="d-flex justify-content-between font-weight-bold">
                            <span>Tổng thanh toán:</span>
                            <span class="text-danger">@Model.TotalPrice.ToString("N0") đ</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Toastr CSS link in head if not already included -->
<!-- Link to Toastr CSS should be in the layout or added here -->
<!-- <link href="~/lib/toastr/toastr.min.css" rel="stylesheet" /> -->

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<!-- Include Toastr JS if not already included in layout -->
<!-- <script src="~/lib/toastr/toastr.min.js"></script> -->
<script>
    $(document).ready(function () {
        // Configure Toastr
        toastr.options = {
            "closeButton": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "timeOut": "3000"
        };

        // Show toast message if exists from TempData
        var toastMessage = '@Html.Raw(TempData["ToastMessage"])';
        var toastType = '@Html.Raw(TempData["ToastType"])';
        if (toastMessage.trim().length > 0) {
            switch (toastType) {
                case 'success':
                    toastr.success(toastMessage, "Thành công!");
                    break;
                case 'error':
                    toastr.error(toastMessage, "Lỗi!");
                    break;
                case 'warning':
                    toastr.warning(toastMessage, "Cảnh báo!");
                    break;
                case 'info':
                    toastr.info(toastMessage, "Thông tin!");
                    break;
                default:
                    toastr.info(toastMessage);
            }
        }

        // Handle button clicks for status updates
        $(document).on('click', '#btnConfirmOrder, #btnConfirmShipping', function () {
            var orderId = $(this).data('order-id');
            var status = $(this).data('status');

            $.ajax({
                url: '@Url.Action("UpdateOrderStatusAjax", "AdminOrderDetail")',
                type: 'POST',
                data: { id: orderId, status: status },
                success: function (response) {
                    if (response.success) {
                        // Update order status badge
                        updateOrderStatusBadge(response.newStatus);

                        // Update action buttons
                        updateActionButtons(response.newStatus, orderId);

                        // Show success message
                        showToastrMessage(response.message, 'success');
                    } else {
                        // Show error message
                        showToastrMessage(response.message, 'error');
                    }
                },
                error: function () {
                    showToastrMessage('Đã xảy ra lỗi khi cập nhật trạng thái đơn hàng', 'error');
                }
            });
        });
    });

    // Update order status badge
    function updateOrderStatusBadge(status) {
        const badgeClass = status === 'Pending' ? 'badge-warning' :
                          status === 'Processing' ? 'badge-info' :
                          status === 'Shipping' ? 'badge-primary' :
                          status === 'Delivered' ? 'badge-success' :
                          status === 'Cancelled' ? 'badge-danger' : 'badge-secondary';

        $('#orderStatus').removeClass('badge-warning badge-info badge-primary badge-success badge-danger badge-secondary')
                         .addClass(badgeClass)
                         .text(status);
    }

    // Update action buttons based on status
    function updateActionButtons(status, orderId) {
        const actionsContainer = $('#orderActions');
        actionsContainer.empty();

        if (status === 'Processing') {
            actionsContainer.html(`
                <button type="button" id="btnConfirmShipping" class="btn btn-primary" data-order-id="${orderId}" data-status="Shipping">
                    <i class="mdi mdi-truck"></i> Xác nhận giao hàng
                </button>
            `);
        } else if (status === 'Shipping') {
            // No buttons for shipping status, but you could add "Mark as Delivered" button here if needed
            showToastrMessage('Đơn hàng đã được chuyển cho shipper', 'success');
        }
    }

    // Show toastr notification
    function showToastrMessage(message, type) {
        switch (type) {
            case 'success':
                toastr.success(message, "Thành công!");
                break;
            case 'error':
                toastr.error(message, "Lỗi!");
                break;
            case 'warning':
                toastr.warning(message, "Cảnh báo!");
                break;
            case 'info':
                toastr.info(message, "Thông tin!");
                break;
            default:
                toastr.info(message);
        }
    }
</script>